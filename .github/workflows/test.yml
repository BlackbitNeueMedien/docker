name: Docker TEST PHP

on:
    # Run tests for any PRs.
    pull_request:

env:
    IMAGE_NAME: pimcore/pimcore

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php: [ '8.0', '8.1' ]
                distro: [ bullseye ]
                target: [ pimcore_php, pimcore_php_debug, pimcore_php_supervisord ]
        steps:
            -   uses: actions/checkout@v2
            -   name: Build Image
                run: |
                    set -ex
                    docker build --tag pimcore-image --target=${{ matrix.target }} --build-arg PHP_VERSION="${{ matrix.php }}" --build-arg DEBIAN_VERSION=${{ matrix.distro }}"
                
                    if [ "${{ matrix.target }}" == "pimcore_php_debug" ]; then
                        # Make sure xdebug is installed and configured on debug-build
                        docker run --rm pimcore-image sh -c 'php -m | grep xdebug'
                        docker run --rm pimcore-image test -f /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
                        # Check if entrypoint did it's job and generated xdebug configuration
                        docker run --rm pimcore-image php -r 'assert("PHPSTORM" === ini_get("xdebug.idekey"));'
                        docker run --rm -e XDEBUG_HOST=pim.co.re pimcore-image sh -c 'php -i | grep "xdebug.*pim\.co\.re"'
                    else
                        # Make sure xdebug is neither activated nor configred on non-debug build
                        docker run --rm pimcore-image sh -c '! php -m | grep xdebug'
                        docker run --rm pimcore-image test ! -f /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
                    fi
                    
                    docker run --rm pimcore-image composer create-project pimcore/skeleton:^10.0 pimcore --no-scripts